parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
          # fetching services directly from the container via $container->get() won't work.
        # The best practice is to be explicit about your dependencies anyway.

    Studi-Domain-StudiRepository-DoctrineRepo:
        class: Doctrine\ORM\EntityRepository
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments:
            - Studi\Domain\Studi

    Studi\Domain\StudiRepository:
        class: 'Studi\Infrastructure\Persistence\DB\DBStudiRepository'
        arguments:
            - "@Studi-Domain-StudiRepository-DoctrineRepo"
            - "@doctrine.orm.entity_manager"
        public: true

    Studi-Domain-StudiInternRepository-DoctrineRepo:
        class: Doctrine\ORM\EntityRepository
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments:
            - Studi\Domain\StudiIntern

    Studi\Domain\StudiInternRepository:
        class: 'Studi\Infrastructure\Persistence\DB\DBStudiInternRepository'
        arguments:
            - "@Studi-Domain-StudiInternRepository-DoctrineRepo"
            - "@doctrine.orm.entity_manager"
        public: true
